{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.18.7",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@typeReturns",
          "syntaxKind": "block"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true,
        "@typeReturns": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@lgd-utils/number!",
  "docComment": "/**\n * number\n *\n * @remarks\n *\n * A front-end number tool\n *\n * @packageDocumentation\n */\n",
  "name": "@lgd-utils/number",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@lgd-utils/number!",
      "name": "",
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@lgd-utils/number!_default:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Content",
              "text": "{\n    convertDataSize: typeof "
            },
            {
              "kind": "Reference",
              "text": "convertDataSize",
              "canonicalReference": "@lgd-utils/number!~convertDataSize:function"
            },
            {
              "kind": "Content",
              "text": ";\n    convertLargeNumber: typeof "
            },
            {
              "kind": "Reference",
              "text": "convertLargeNumber",
              "canonicalReference": "@lgd-utils/number!~convertLargeNumber:function"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "_default",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@lgd-utils/number!convertDataSize:function(1)",
          "docComment": "/**\n * @remarks\n *\n * 转换数据大小为人类可读\n *\n * @param originalSize - 原始的数据大小\n *\n * @param originalUnit - 原始的数据大小的单位\n *\n * @param unitSeparator - 数据大小与单位之间的分隔符\n *\n * @param options - 配置\n *\n * @typeParam originalSize - number | string | undefined\n *\n * @typeParam originalUnit - string | undefined\n *\n * @typeParam unitSeparator - string | undefined\n *\n * @typeParam options - bytes.BytesOptions | ((option: \\{ bytesSize: number bytes: typeof bytes defaultUnit: string originalSize: number | string originalUnit: string unitSeparator: string \\}) =\\> bytes.BytesOptions) | undefined\n *\n * @returns [转换后的数据大小, 转换后的数据大小的单位, 数字类型的转换后的数据大小, 要转换的原始的数据大小, 要转换的原始的数据大小的单位] - [string, string, number, number | string, string]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function convertDataSize(originalSize?: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", originalUnit?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", unitSeparator?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "bytes.BytesOptions",
              "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
            },
            {
              "kind": "Content",
              "text": " | ((option: {\n    bytesSize: number;\n    bytes: typeof "
            },
            {
              "kind": "Reference",
              "text": "bytes",
              "canonicalReference": "@types/bytes!~bytes:function"
            },
            {
              "kind": "Content",
              "text": ";\n    defaultUnit: string;\n    originalSize: number | string;\n    originalUnit: string;\n    unitSeparator: string;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "bytes.BytesOptions",
              "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
            },
            {
              "kind": "Content",
              "text": ")"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[string, string, number, number | string, string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "originalSize",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "originalUnit",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "unitSeparator",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              }
            }
          ],
          "name": "convertDataSize"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@lgd-utils/number!convertDataSize:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace convertDataSize "
            }
          ],
          "releaseTag": "Public",
          "name": "convertDataSize",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@lgd-utils/number!convertDataSize.format:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "format: "
                },
                {
                  "kind": "Content",
                  "text": "(separator?: string | undefined, originalSize?: string | number | undefined, originalUnit?: string | undefined, unitSeparator?: string | undefined, options?: "
                },
                {
                  "kind": "Reference",
                  "text": "bytes.BytesOptions",
                  "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | ((option: {\n        bytesSize: number;\n        bytes: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "bytes",
                  "canonicalReference": "@types/bytes!~bytes:function"
                },
                {
                  "kind": "Content",
                  "text": ";\n        defaultUnit: string;\n        originalSize: string | number;\n        originalUnit: string;\n        unitSeparator: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "bytes.BytesOptions",
                  "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ") | undefined) => string"
                }
              ],
              "releaseTag": "Public",
              "name": "format",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@lgd-utils/number!convertDataSize.normal:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "normal: "
                },
                {
                  "kind": "Content",
                  "text": "(originalSize?: string | number | undefined, originalUnit?: string | undefined, unitSeparator?: string | undefined, options?: "
                },
                {
                  "kind": "Reference",
                  "text": "bytes.BytesOptions",
                  "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | ((option: {\n        bytesSize: number;\n        bytes: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "bytes",
                  "canonicalReference": "@types/bytes!~bytes:function"
                },
                {
                  "kind": "Content",
                  "text": ";\n        defaultUnit: string;\n        originalSize: string | number;\n        originalUnit: string;\n        unitSeparator: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "bytes.BytesOptions",
                  "canonicalReference": "@types/bytes!~bytes.BytesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ") | undefined) => string"
                }
              ],
              "releaseTag": "Public",
              "name": "normal",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@lgd-utils/number!convertLargeNumber:function(1)",
          "docComment": "/**\n * @remarks\n *\n * 转换大额数字\n *\n * @param value - 要转换的数字\n *\n * @param precision - 精度\n *\n * @typeParam value - number | string | undefined\n *\n * @typeParam precision - number | undefined\n *\n * @returns [转换后的值, 转换后的单位, 数字类型的转换后的值, 原始的要转换的数字, 原始的要转换的单位] - [string, string, number, number, string]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function convertLargeNumber(value?: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", precision?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[string, string, number, number, string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "precision",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "convertLargeNumber"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@lgd-utils/number!convertLargeNumber:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace convertLargeNumber "
            }
          ],
          "releaseTag": "Public",
          "name": "convertLargeNumber",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@lgd-utils/number!convertLargeNumber.format:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "format: "
                },
                {
                  "kind": "Content",
                  "text": "(separator?: string | undefined, value?: string | number | undefined, precision?: number | undefined) => string"
                }
              ],
              "releaseTag": "Public",
              "name": "format",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@lgd-utils/number!convertLargeNumber.normal:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "normal: "
                },
                {
                  "kind": "Content",
                  "text": "(value?: string | number | undefined, precision?: number | undefined) => string"
                }
              ],
              "releaseTag": "Public",
              "name": "normal",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
